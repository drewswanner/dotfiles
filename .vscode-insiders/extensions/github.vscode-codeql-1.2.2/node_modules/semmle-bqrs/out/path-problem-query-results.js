"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
require("reflect-metadata");
const bqrs_custom_1 = require("./bqrs-custom");
const problem_query_results_1 = require("./problem-query-results");
class PathProblemAlert {
}
__decorate([
    bqrs_custom_1.qlElement(0)
], PathProblemAlert.prototype, "element", void 0);
__decorate([
    bqrs_custom_1.qlElement(1)
], PathProblemAlert.prototype, "source", void 0);
__decorate([
    bqrs_custom_1.qlElement(2)
], PathProblemAlert.prototype, "sink", void 0);
__decorate([
    bqrs_custom_1.qlString(3)
], PathProblemAlert.prototype, "message", void 0);
__decorate([
    bqrs_custom_1.qlTuple({ startColumn: 4 }, problem_query_results_1.ElementReference)
], PathProblemAlert.prototype, "references", void 0);
exports.PathProblemAlert = PathProblemAlert;
class PathProblemEdge {
}
__decorate([
    bqrs_custom_1.qlElement(0)
], PathProblemEdge.prototype, "predecessor", void 0);
__decorate([
    bqrs_custom_1.qlElement(1)
], PathProblemEdge.prototype, "successor", void 0);
exports.PathProblemEdge = PathProblemEdge;
class GraphProperty {
}
__decorate([
    bqrs_custom_1.qlString(0)
], GraphProperty.prototype, "key", void 0);
__decorate([
    bqrs_custom_1.qlString(1)
], GraphProperty.prototype, "value", void 0);
exports.GraphProperty = GraphProperty;
class PathProblemNode {
}
__decorate([
    bqrs_custom_1.qlElement(0)
], PathProblemNode.prototype, "node", void 0);
__decorate([
    bqrs_custom_1.qlTuple({ startColumn: 1 }, GraphProperty)
], PathProblemNode.prototype, "properties", void 0);
exports.PathProblemNode = PathProblemNode;
class PathProblemQueryResults {
}
__decorate([
    bqrs_custom_1.qlTable(PathProblemAlert, { name: ['select', 'problems'] })
], PathProblemQueryResults.prototype, "problems", void 0);
__decorate([
    bqrs_custom_1.qlTable(PathProblemNode)
], PathProblemQueryResults.prototype, "nodes", void 0);
__decorate([
    bqrs_custom_1.qlTable(PathProblemEdge)
], PathProblemQueryResults.prototype, "edges", void 0);
exports.PathProblemQueryResults = PathProblemQueryResults;

//# sourceMappingURL=path-problem-query-results.js.map
